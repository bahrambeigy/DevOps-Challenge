version: '3.5'

services:

  nginx-server:
    image: nginx:alpine
    ports:
    - "8001:80"
    volumes:
    - ./docker/default.conf:/etc/nginx/conf.d/default.conf:ro
    - ./static:/srv:ro
    depends_on:
    - "tornado-server"
    ulimits:
      nproc: 500
      nofile:
        soft: 1000
        hard: 2000
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M
    user: root
    networks:
      net_frontend:
      net_backend:
    stop_grace_period: 5s


  tornado-server:
    build: .
    environment:
    - ENVIRONMENT=DEV
    - HOST=0.0.0.0
    - PORT=8000
    - REDIS_HOST=redis-server
    - REDIS_PORT=6379
    - REDIS_DB=0
    depends_on:
    - redis-server
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M
    user: root
    networks:
      net_frontend:
      net_backend:
    stop_grace_period: 5s
    command: ["bash", "-c", "/wait_for_redis.sh redis-server:6379 && python hello.py"]


  redis-server:
    image: redis:5-alpine
    volumes:
    - db-redis:/data:rw
    - ./docker/redis.conf:/etc/redis.conf:ro
    user: root
    stop_grace_period: 1m
    sysctls:
    - net.core.somaxconn=512
    networks:
      net_backend:
    command: [ "redis-server", "/etc/redis.conf" ]


#### Networks
networks:
  net_frontend:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default

  net_backend:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    internal: true
    ipam:
      driver: default

### Volumes

volumes:
  db-redis:
    driver: local
